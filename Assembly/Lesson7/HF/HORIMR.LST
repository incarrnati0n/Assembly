Microsoft (R) Macro Assembler Version 5.10                  11/6/23 16:28:36
                                                             Page     1-1


       1				
       2 0000				Code    Segment
       3				    assume CS:Code, DS:Data, SS:Stack
       4				
       5 0000				Start:
       6 0000  B8 ---- R			mov	ax, Code
       7 0003  8E D8				mov DS, AX		
       8				
       9 0005  B9 0064				mov cx, 100 ;X1 
      10 0008  BA 0064				mov dx, 100 ;Y1
      11				
      12 000B  52				push dx ;Y1 be
      13 000C  51				push cx ;X1 be
      14				
      15 000D  B9 00C8				mov cx, 200 ;X2
      16 0010  BA 00C8				mov dx, 200 ;Y2
      17				
      18 0013  52				push dx ;Y2 be
      19 0014  51				push cx ;X2 be
      20				
      21 0015  B8 0013				mov ax, 13h
      22 0018  CD 10				int	10h
      23					
      24 001A  B8 A000				mov	ax, 0a000h
      25 001D  8E C0				mov es, ax
      26				
      27 001F				Rajz: ;X1, Y1
      28					
      29 001F  59				pop cx ;X2 ki
      30 0020  5A				pop dx ;Y2 ki
      31 0021  5B				pop bx ;X1 ki
      32 0022  58				pop ax ;Y1 ki
      33						
      34 0023  50				push ax
      35 0024  53				push bx
      36 0025  52				push dx
      37 0026  51				push cx
      38						
      39 0027  BA 0140				mov dx, 320
      40 002A  F7 E2				mul	dx
      41						
      42 002C  03 C3				add	ax, bx
      43 002E  8B F8				mov di, ax
      44					;jnc	Pixel
      45					;inc ah
      46				
      47 0030  EB 11 90				jmp Pixel
      48				
      49 0033				Rajz2:
      50 0033  5B				pop bx
      51 0034  58				pop ax
      52				
      53 0035  50				push ax
      54 0036  53				push bx
Microsoft (R) Macro Assembler Version 5.10                  11/6/23 16:28:36
                                                             Page     1-2


      55						
      56 0037  BA 0140				mov	dx, 320
      57 003A  F7 E2				mul	dx
      58						
      59 003C  03 C3				add	ax, bx
      60 003E  8B F8				mov di, ax
      61					;jnc	Pixel2
      62					;inc ah
      63				
      64 0040  EB 09 90				jmp Pixel2
      65				
      66 0043				Pixel:
      67 0043  B0 01				mov	al, 1
      68 0045  26: 88 05			mov	es:[di], al
      69				
      70 0048  EB 09 90				jmp Var
      71 004B				Pixel2:
      72 004B  B0 04				mov al, 4
      73 004D  26: 88 05			mov es:[di], al
      74				
      75 0050  EB 01 90				jmp Var
      76 0053				Var:
      77 0053  33 C0				xor	ax,ax
      78 0055  CD 16				int	16h
      79					
      80 0057  3C 1B				cmp	al, 27
      81 0059  74 5F				jz	JumpHelper
      82					
      83 005B  80 FC 4B				cmp	ah, 75
      84 005E  74 21				jz	Balra
      85						
      86 0060  80 FC 4D				cmp	ah, 77
      87 0063  74 2A				jz	Jobbra
      88						
      89 0065  80 FC 48				cmp	ah, 72
      90 0068  74 34				jz	Felfele
      91				
      92 006A  80 FC 50				cmp	ah, 80
      93 006D  74 3D				jz	Lefele
      94					
      95 006F  3C 61				cmp al, 'a'
      96 0071  74 4A				jz Balra2
      97				
      98 0073  3C 73				cmp al, 's'
      99 0075  74 6B				jz Lefele2
     100				
     101 0077  3C 77				cmp al, 'w'
     102 0079  74 5B				jz Felfele2
     103				
     104 007B  3C 64				cmp al, 'd'
     105 007D  74 4A				jz Jobbra2
     106				
     107 007F  EB D2				jmp	Var
     108				
Microsoft (R) Macro Assembler Version 5.10                  11/6/23 16:28:36
                                                             Page     1-3


     109 0081				Balra:
     110 0081  59				pop cx ;X2 ki
     111 0082  5A				pop dx ;Y2 ki
     112 0083  5B				pop bx ;X1 ki
     113 0084  58				pop ax ;Y1 ki
     114						
     115					;push ax
     116					;push bx
     117					;push dx
     118					;push cx
     119				
     120 0085  4B				dec	bx
     121 0086  83 FB 00				cmp	bx, 0
     122 0089  73 63				jnc Tarol
     123 008B  43				inc bx
     124 008C  EB 60 90				jmp	Tarol
     125					
     126 008F				Jobbra:
     127 008F  59				pop cx ;X2 ki
     128 0090  5A				pop dx ;Y2 ki
     129 0091  5B				pop bx ;X1 ki
     130 0092  58				pop ax ;Y1 ki
     131						
     132					;push ax
     133					;push bx
     134					;push dx
     135					;push cx
     136				
     137 0093  43				inc bx
     138 0094  81 FB 0140			cmp	bx, 320
     139 0098  72 54				jc	Tarol
     140 009A  4B				dec	bx
     141 009B  EB 51 90				jmp	Tarol
     142					
     143 009E				Felfele:
     144 009E  59				pop cx ;X2 ki
     145 009F  5A				pop dx ;Y2 ki
     146 00A0  5B				pop bx ;X1 ki
     147 00A1  58				pop ax ;Y1 ki
     148						
     149					;push ax
     150					;push bx
     151					;push dx
     152					;push cx
     153				
     154 00A2  48				dec	ax
     155 00A3  3D 0000				cmp	ax, 0
     156 00A6  73 46				jnc Tarol
     157 00A8  40				inc	ax
     158 00A9  EB 43 90				jmp	Tarol
     159				
     160 00AC				Lefele:
     161				
     162 00AC  59				pop cx ;X2 ki
Microsoft (R) Macro Assembler Version 5.10                  11/6/23 16:28:36
                                                             Page     1-4


     163 00AD  5A				pop dx ;Y2 ki
     164 00AE  5B				pop bx ;X1 ki
     165 00AF  58				pop ax ;Y1 ki
     166						
     167					;push ax
     168					;push bx
     169					;push dx
     170					;push cx
     171				
     172 00B0  40				inc	ax
     173 00B1  3D 00C8				cmp	ax, 200
     174 00B4  72 38				jc	Tarol
     175 00B6  48				dec	ax
     176 00B7  EB 35 90				jmp	Tarol
     177				
     178 00BA				JumpHelper:
     179 00BA  EB 3E 90				jmp Program_Vege
     180				
     181 00BD				Balra2:
     182 00BD  5B				pop bx
     183 00BE  58				pop ax
     184				
     185					;push ax
     186					;push bx
     187				
     188 00BF  4B			 	dec	bx
     189 00C0  83 FB 00				cmp	bx, 0
     190 00C3  73 30				jnc Tarol2
     191 00C5  43				inc bx
     192 00C6  EB 2D 90				jmp	Tarol2
     193					
     194 00C9				Jobbra2:
     195 00C9  5B				pop bx
     196 00CA  58				pop ax
     197				
     198					;push ax
     199					;push bx
     200				
     201 00CB  43				inc bx
     202 00CC  81 FB 0140			cmp	bx, 320
     203 00D0  72 23				jc	Tarol2
     204 00D2  4B				dec	bx
     205 00D3  EB 20 90				jmp	Tarol2
     206					
     207 00D6				Felfele2:
     208 00D6  5B				pop bx
     209 00D7  58				pop ax
     210				
     211					;push ax
     212					;push bx
     213				
     214 00D8  48				dec	ax
     215 00D9  3D 0000				cmp	ax, 0
     216 00DC  73 17				jnc Tarol2
Microsoft (R) Macro Assembler Version 5.10                  11/6/23 16:28:36
                                                             Page     1-5


     217 00DE  40				inc	ax
     218 00DF  EB 14 90				jmp	Tarol2
     219				
     220 00E2				Lefele2:
     221 00E2  5B				pop bx
     222 00E3  58				pop ax
     223				
     224					;push ax
     225					;push bx
     226				
     227 00E4  40				inc	ax
     228 00E5  3D 00C8				cmp	ax, 200
     229 00E8  72 0B				jc	Tarol2
     230 00EA  48				dec	ax
     231 00EB  EB 08 90				jmp	Tarol2
     232				
     233 00EE				Tarol:
     234 00EE  50				push ax
     235 00EF  53				push bx
     236 00F0  52				push dx
     237 00F1  51				push cx
     238 00F2  E9 001F R			jmp	Rajz
     239				
     240 00F5				Tarol2:
     241 00F5  50				push ax
     242 00F6  53				push bx
     243 00F7  E9 0033 R			jmp Rajz2
     244				
     245 00FA				Program_Vege:
     246 00FA  B8 0003				mov	ax, 03h
     247 00FD  CD 10				int	10h
     248						
     249 00FF  59				pop	cx
     250 0100  5A				pop	dx
     251					
     252 0101  B8 4C00				mov	ax, 4c00h
     253 0104  CD 21				int	21h
     254						
     255				
     256 0106				Code Ends
     257 0000				Data Segment
     258 0000				Data Ends
     259 0000				Stack Segment
     260 0000				Stack Ends
     261					End	Start
Microsoft (R) Macro Assembler Version 5.10                  11/6/23 16:28:36
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

CODE . . . . . . . . . . . . . .  	0106	PARA	NONE	
DATA . . . . . . . . . . . . . .  	0000	PARA	NONE	
STACK  . . . . . . . . . . . . .  	0000	PARA	NONE	

Symbols:            

                N a m e         	Type	 Value	 Attr

BALRA  . . . . . . . . . . . . .  	L NEAR	0081	CODE
BALRA2 . . . . . . . . . . . . .  	L NEAR	00BD	CODE

FELFELE  . . . . . . . . . . . .  	L NEAR	009E	CODE
FELFELE2 . . . . . . . . . . . .  	L NEAR	00D6	CODE

JOBBRA . . . . . . . . . . . . .  	L NEAR	008F	CODE
JOBBRA2  . . . . . . . . . . . .  	L NEAR	00C9	CODE
JUMPHELPER . . . . . . . . . . .  	L NEAR	00BA	CODE

LEFELE . . . . . . . . . . . . .  	L NEAR	00AC	CODE
LEFELE2  . . . . . . . . . . . .  	L NEAR	00E2	CODE

PIXEL  . . . . . . . . . . . . .  	L NEAR	0043	CODE
PIXEL2 . . . . . . . . . . . . .  	L NEAR	004B	CODE
PROGRAM_VEGE . . . . . . . . . .  	L NEAR	00FA	CODE

RAJZ . . . . . . . . . . . . . .  	L NEAR	001F	CODE
RAJZ2  . . . . . . . . . . . . .  	L NEAR	0033	CODE

START  . . . . . . . . . . . . .  	L NEAR	0000	CODE

TAROL  . . . . . . . . . . . . .  	L NEAR	00EE	CODE
TAROL2 . . . . . . . . . . . . .  	L NEAR	00F5	CODE

VAR  . . . . . . . . . . . . . .  	L NEAR	0053	CODE

@CPU . . . . . . . . . . . . . .  	TEXT  0101h		
@FILENAME  . . . . . . . . . . .  	TEXT  horimr		
@VERSION . . . . . . . . . . . .  	TEXT  510		

Microsoft (R) Macro Assembler Version 5.10                  11/6/23 16:28:36
                                                             Symbols-2



    261 Source  Lines
    261 Total   Lines
     26 Symbols

  47376 + 459852 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
